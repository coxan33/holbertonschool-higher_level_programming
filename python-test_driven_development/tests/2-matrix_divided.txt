The "2-matrix_divided" module


>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


>>> matrix_divided([[1, 3, 2], [4, -6, 2]], 2)
[[0.5, 1.5, 1.0], [2.0, -3.0, 1.0]]

>>> matrix_divided([[5, 9, 3], [2, 4, 8], 0])
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided("string", 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided(2, "string")
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(None, None)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


>>> matrix_divided([[1, 3, 2], [4, -6, 2]], "string")
Traceback (most recent call last):
...
TypeError: div must be a number


>>> matrix_divided([[1, -2, 1], [4]])
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided([[1, -2, 1], "string", 2])
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix_divided([[1], None], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
